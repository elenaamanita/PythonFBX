<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg height="480" onload="init(evt)" preserveAspectRatio="xMidYMid meet" version="1.1" viewBox="0,0,0,0" width="480" xmlns="http://www.w3.org/2000/svg">
<script type="text/ecmascript"><![CDATA[
edges = [[0,2],[2,3],[3,1],[1,0],[4,5],[5,7],[7,6],[6,4],[1,5],[4,0],[3,7],[2,6]]
faces = [[0,2,3,1],[4,5,7,6],[0,1,5,4],[1,3,7,5],[3,2,6,7],[2,0,4,6]]
depth =[0,0,0,0,0,0]
x_coords = [0.0,42.257598877,0.0,42.257598877,0.0,42.257598877,0.0,42.257598877];
y_coords = [0.0,0.0,39.363243103,39.363243103,0.0,0.0,39.363243103,39.363243103];
z_coords = [0.0,0.0,0.0,0.0,32.4167861938,32.4167861938,32.4167861938,32.4167861938];


centre_x = 21.1287994385;
centre_y = 19.6816215515;
centre_z = 0;



	var minX = -999;
	var minY = -999;
	var maxX = -999;
	var maxY = -999;

function init(evt)
{
	if ( window.svgDocument == null )
	{
		svgDocument = evt.target.ownerDocument;
	}
	rotateAboutY(2.355);
	rotateAboutX(-2.355);
	calculateDepth()
	drawBox();
	setViewBox();
if(minX < 0 || minY < 0)
{
	fixCoords();
	drawBox();
	setViewBox();
}}


function setViewBox()
{
	minX = -999;
	minY = -999;
	maxX = -999;
	maxY = -999;
	
	for(var i = 0; i < x_coords.length; i++)
	{
		if(minX == -999 || x_coords[i] < minX)
			minX = x_coords[i];
		if(minY == -999 || y_coords[i] < minY)
			minY = y_coords[i];
		if(maxX == -999 || x_coords[i] > maxX)
			maxX = x_coords[i];
		if(maxY == -999 || y_coords[i] > maxY)
			maxY = y_coords[i];
	}
	shape = document.getElementsByTagName('svg')[0];
	shape.setAttribute('viewBox', minX+'0 '+ minY+' '+ maxX+'0 '+maxY);
}


function fixCoords()
{
	if(minX < 0)
	{
		centre_x += -minX;
		for(var i = 0; i < x_coords.length;i++)
		{
			x_coords[i] += -minX;
		}
	}
	if(minY < 0)
	{
		centre_y += -minY;
		for(var i = 0; i < y_coords.length;i++)
		{
			y_coords[i] += -minY;
		}
	}
}


function calculateDepth()
{
	var facesDepth = Array(faces.length);
	for(var i = 0; i < faces.length; i++)
	{
		var currentDepth = 0;
		for(var u = 0; u < faces[i].length; u ++)
		{
			currentDepth += z_coords[faces[i][u]];
		}
		currentDepth /= faces[i].length;
		facesDepth[i] = currentDepth;
	}
	for(var i = 0; i < depth.length; i++)
	{
		var smallest = -1;
		for(var u = 0; u < facesDepth.length; u++)
		{
			if(facesDepth[u] != -99999 && (smallest == -1 || facesDepth[smallest] > facesDepth[u]))
				smallest = u;
		}
		depth[i] = smallest;
		facesDepth[smallest] = -99999;
	}
}


function drawBox()
{
	for(var i=0; i<depth.length; i++)
	{
		face = svgDocument.getElementById('face-'+i);
		var d = 'm'+x_coords[faces[depth[i]][0]]+' '+y_coords[faces[depth[i]][0]];
		for(var u = 1; u < faces[depth[i]].length; u++)
		{
			d+= ' ' + 'L'+x_coords[faces[depth[i]][u]]+' '+y_coords[faces[depth[i]][u]];
		}
		d+= ' Z';
		face.setAttributeNS(null, 'd', d);
	}
}


function rotateAboutX(radians)
{
	for(var i=0; i<x_coords.length; i++)
	{
		y = y_coords[i] - centre_y;
		z = z_coords[i] - centre_z;
		d = Math.sqrt(y*y + z*z);
		theta  = Math.atan2(y, z) + radians;
		y_coords[i] = centre_y + d * Math.sin(theta);
		z_coords[i] = centre_z + d * Math.cos(theta);
	}
}


function rotateAboutY(radians)
{
	for(var i=0; i<x_coords.length; i++)
	{
		x = x_coords[i] - centre_x;
		z = z_coords[i] - centre_z;
		d = Math.sqrt(x*x + z*z);
		theta  = Math.atan2(x, z) + radians;
		x_coords[i] = centre_x + d * Math.sin(theta);
		z_coords[i] = centre_z + d * Math.cos(theta);
	}
}


function rotateAboutZ(radians)
{
	for(var i=0; i<x_coords.length; i++)
	{
		x = x_coords[i] - centre_x;
		y = y_coords[i] - centre_y;
		d = Math.sqrt(x*x + y*y);
		theta  = Math.atan2(x, y) + radians;
		x_coords[i] = centre_x + d * Math.sin(theta);
		y_coords[i] = centre_y + d * Math.cos(theta);
	}
}
]]><![CDATA[
edges = [[0,2],[2,3],[3,1],[1,0],[4,5],[5,7],[7,6],[6,4],[1,5],[4,0],[3,7],[2,6]]
faces = [[0,2,3,1],[4,5,7,6],[0,1,5,4],[1,3,7,5],[3,2,6,7],[2,0,4,6]]
depth =[0,0,0,0,0,0]
x_coords = [0.0,42.257598877,0.0,42.257598877,0.0,42.257598877,0.0,42.257598877];
y_coords = [0.0,0.0,39.363243103,39.363243103,0.0,0.0,39.363243103,39.363243103];
z_coords = [0.0,0.0,0.0,0.0,32.4167861938,32.4167861938,32.4167861938,32.4167861938];


centre_x = 21.1287994385;
centre_y = 19.6816215515;
centre_z = 0;



	var minX = -999;
	var minY = -999;
	var maxX = -999;
	var maxY = -999;

function init(evt)
{
	if ( window.svgDocument == null )
	{
		svgDocument = evt.target.ownerDocument;
	}
	rotateAboutY(2.355);
	rotateAboutX(-2.355);
	calculateDepth()
	drawBox();
	setViewBox();
if(minX < 0 || minY < 0)
{
	fixCoords();
	drawBox();
	setViewBox();
}}


function setViewBox()
{
	minX = -999;
	minY = -999;
	maxX = -999;
	maxY = -999;
	
	for(var i = 0; i < x_coords.length; i++)
	{
		if(minX == -999 || x_coords[i] < minX)
			minX = x_coords[i];
		if(minY == -999 || y_coords[i] < minY)
			minY = y_coords[i];
		if(maxX == -999 || x_coords[i] > maxX)
			maxX = x_coords[i];
		if(maxY == -999 || y_coords[i] > maxY)
			maxY = y_coords[i];
	}
	shape = document.getElementsByTagName('svg')[0];
	shape.setAttribute('viewBox', minX+'0 '+ minY+' '+ maxX+'0 '+maxY);
}


function fixCoords()
{
	if(minX < 0)
	{
		centre_x += -minX;
		for(var i = 0; i < x_coords.length;i++)
		{
			x_coords[i] += -minX;
		}
	}
	if(minY < 0)
	{
		centre_y += -minY;
		for(var i = 0; i < y_coords.length;i++)
		{
			y_coords[i] += -minY;
		}
	}
}


function calculateDepth()
{
	var facesDepth = Array(faces.length);
	for(var i = 0; i < faces.length; i++)
	{
		var currentDepth = 0;
		for(var u = 0; u < faces[i].length; u ++)
		{
			currentDepth += z_coords[faces[i][u]];
		}
		currentDepth /= faces[i].length;
		facesDepth[i] = currentDepth;
	}
	for(var i = 0; i < depth.length; i++)
	{
		var smallest = -1;
		for(var u = 0; u < facesDepth.length; u++)
		{
			if(facesDepth[u] != -99999 && (smallest == -1 || facesDepth[smallest] > facesDepth[u]))
				smallest = u;
		}
		depth[i] = smallest;
		facesDepth[smallest] = -99999;
	}
}


function drawBox()
{
	for(var i=0; i<depth.length; i++)
	{
		face = svgDocument.getElementById('face-'+i);
		var d = 'm'+x_coords[faces[depth[i]][0]]+' '+y_coords[faces[depth[i]][0]];
		for(var u = 1; u < faces[depth[i]].length; u++)
		{
			d+= ' ' + 'L'+x_coords[faces[depth[i]][u]]+' '+y_coords[faces[depth[i]][u]];
		}
		d+= ' Z';
		face.setAttributeNS(null, 'd', d);
	}
}


function rotateAboutX(radians)
{
	for(var i=0; i<x_coords.length; i++)
	{
		y = y_coords[i] - centre_y;
		z = z_coords[i] - centre_z;
		d = Math.sqrt(y*y + z*z);
		theta  = Math.atan2(y, z) + radians;
		y_coords[i] = centre_y + d * Math.sin(theta);
		z_coords[i] = centre_z + d * Math.cos(theta);
	}
}


function rotateAboutY(radians)
{
	for(var i=0; i<x_coords.length; i++)
	{
		x = x_coords[i] - centre_x;
		z = z_coords[i] - centre_z;
		d = Math.sqrt(x*x + z*z);
		theta  = Math.atan2(x, z) + radians;
		x_coords[i] = centre_x + d * Math.sin(theta);
		z_coords[i] = centre_z + d * Math.cos(theta);
	}
}


function rotateAboutZ(radians)
{
	for(var i=0; i<x_coords.length; i++)
	{
		x = x_coords[i] - centre_x;
		y = y_coords[i] - centre_y;
		d = Math.sqrt(x*x + y*y);
		theta  = Math.atan2(x, y) + radians;
		x_coords[i] = centre_x + d * Math.sin(theta);
		y_coords[i] = centre_y + d * Math.cos(theta);
	}
}
]]edges = [[0,2],[2,3],[3,1],[1,0],[4,5],[5,7],[7,6],[6,4],[1,5],[4,0],[3,7],[2,6]]
faces = [[0,2,3,1],[4,5,7,6],[0,1,5,4],[1,3,7,5],[3,2,6,7],[2,0,4,6]]
depth =[0,0,0,0,0,0]
x_coords = [0.0,42.257598877,0.0,42.257598877,0.0,42.257598877,0.0,42.257598877];
y_coords = [0.0,0.0,39.363243103,39.363243103,0.0,0.0,39.363243103,39.363243103];
z_coords = [0.0,0.0,0.0,0.0,32.4167861938,32.4167861938,32.4167861938,32.4167861938];


centre_x = 21.1287994385;
centre_y = 19.6816215515;
centre_z = 0;



	var minX = -999;
	var minY = -999;
	var maxX = -999;
	var maxY = -999;

function init(evt)
{
	if ( window.svgDocument == null )
	{
		svgDocument = evt.target.ownerDocument;
	}
	rotateAboutY(2.355);
	rotateAboutX(-2.355);
	calculateDepth()
	drawBox();
	setViewBox();
if(minX < 0 || minY < 0)
{
	fixCoords();
	drawBox();
	setViewBox();
}}


function setViewBox()
{
	minX = -999;
	minY = -999;
	maxX = -999;
	maxY = -999;
	
	for(var i = 0; i < x_coords.length; i++)
	{
		if(minX == -999 || x_coords[i] < minX)
			minX = x_coords[i];
		if(minY == -999 || y_coords[i] < minY)
			minY = y_coords[i];
		if(maxX == -999 || x_coords[i] > maxX)
			maxX = x_coords[i];
		if(maxY == -999 || y_coords[i] > maxY)
			maxY = y_coords[i];
	}
	shape = document.getElementsByTagName('svg')[0];
	shape.setAttribute('viewBox', minX+'50 '+ minY+' '+ maxX+'50 '+maxY);
}


function fixCoords()
{
	if(minX < 0)
	{
		centre_x += -minX;
		for(var i = 0; i < x_coords.length;i++)
		{
			x_coords[i] += -minX;
		}
	}
	if(minY < 0)
	{
		centre_y += -minY;
		for(var i = 0; i < y_coords.length;i++)
		{
			y_coords[i] += -minY;
		}
	}
}


function calculateDepth()
{
	var facesDepth = Array(faces.length);
	for(var i = 0; i < faces.length; i++)
	{
		var currentDepth = 0;
		for(var u = 0; u < faces[i].length; u ++)
		{
			currentDepth += z_coords[faces[i][u]];
		}
		currentDepth /= faces[i].length;
		facesDepth[i] = currentDepth;
	}
	for(var i = 0; i < depth.length; i++)
	{
		var smallest = -1;
		for(var u = 0; u < facesDepth.length; u++)
		{
			if(facesDepth[u] != -99999 && (smallest == -1 || facesDepth[smallest] > facesDepth[u]))
				smallest = u;
		}
		depth[i] = smallest;
		facesDepth[smallest] = -99999;
	}
}


function drawBox()
{
	for(var i=0; i<depth.length; i++)
	{
		face = svgDocument.getElementById('face-'+i);
		var d = 'm'+x_coords[faces[depth[i]][0]]+' '+y_coords[faces[depth[i]][0]];
		for(var u = 1; u < faces[depth[i]].length; u++)
		{
			d+= ' ' + 'L'+x_coords[faces[depth[i]][u]]+' '+y_coords[faces[depth[i]][u]];
		}
		d+= ' Z';
		face.setAttributeNS(null, 'd', d);
	}
}


function rotateAboutX(radians)
{
	for(var i=0; i<x_coords.length; i++)
	{
		y = y_coords[i] - centre_y;
		z = z_coords[i] - centre_z;
		d = Math.sqrt(y*y + z*z);
		theta  = Math.atan2(y, z) + radians;
		y_coords[i] = centre_y + d * Math.sin(theta);
		z_coords[i] = centre_z + d * Math.cos(theta);
	}
}


function rotateAboutY(radians)
{
	for(var i=0; i<x_coords.length; i++)
	{
		x = x_coords[i] - centre_x;
		z = z_coords[i] - centre_z;
		d = Math.sqrt(x*x + z*z);
		theta  = Math.atan2(x, z) + radians;
		x_coords[i] = centre_x + d * Math.sin(theta);
		z_coords[i] = centre_z + d * Math.cos(theta);
	}
}


function rotateAboutZ(radians)
{
	for(var i=0; i<x_coords.length; i++)
	{
		x = x_coords[i] - centre_x;
		y = y_coords[i] - centre_y;
		d = Math.sqrt(x*x + y*y);
		theta  = Math.atan2(x, y) + radians;
		x_coords[i] = centre_x + d * Math.sin(theta);
		y_coords[i] = centre_y + d * Math.cos(theta);
	}
}
]]></script><path d="" fill="#8c073a" id="face-0" stroke="#8c073a">
</path><path d="" fill="#830636" id="face-1" stroke="#830636">
</path><path d="" fill="#7a0632" id="face-2" stroke="#7a0632">
</path><path d="" fill="#70052e" id="face-3" stroke="#70052e">
</path><path d="" fill="#67052a" id="face-4" stroke="#67052a">
</path><path d="" fill="#5d0426" id="face-5" stroke="#5d0426">
</path><path d="" fill="#8c073a" id="face-0" stroke="#8c073a">
</path><path d="" fill="#830636" id="face-1" stroke="#830636">
</path><path d="" fill="#7a0632" id="face-2" stroke="#7a0632">
</path><path d="" fill="#70052e" id="face-3" stroke="#70052e">
</path><path d="" fill="#67052a" id="face-4" stroke="#67052a">
</path><path d="" fill="#5d0426" id="face-5" stroke="#5d0426">
</path></svg>